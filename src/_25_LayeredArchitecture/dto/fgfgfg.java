//package _25_LayerdArchitecture.dto;
//
//public class fgfgfg {
    /*
    * 1. 뷰라는 곳에서 메뉴들을 보여줄 거니 메뉴가 있을텐데 각각에 따라 서비스 쪽에서 비즈니스로직이 각각 있는데  그리고 서비스에서 레퍼지토리로 보낸다.
    * 2. 이 레퍼지토리 안에는 유저 정보를 담고 있는 데이터인 유저스라고 유저의 객체를 담고잇는 유저의 배열을 만든다.
    * 3. 그리고 투두를 저장하는 배열을 만든다 레퍼지토리에 1. 유저정보 2. 투두 를 만드는데 이거의 각각 을 또 만든다. 유저정보를 확인할 수 있도록
    * 메소드들을 만들어 놓는다.
    * 4. 비즈니스 로직엣 ㅓ 회원가입을 한다고 치면 유저정보가 있는 유저 리스트
    * 메뉴에서 회원가입 눌러서 서비스 비즈니스 로직에서 회원가입 누르고 회원가입을 위해 유저리스트 안에 추가를하는 메소드를 찾아간다.
    *
    *
    * 1. 엔티티를 먼저 만들어보자 디비에 설계했다 치고 유저 디비는 유저_아이디, 유저네임, 패스워드, 크리에이트_디티를 만들어보자 얘를 유저 객체들을 가진 배열형태로 디비를 대체할꺼니 all, get, set, to필요하니 만들어주면
    * 된다.
    * 2. 투두는 투두_아이디, 컨텐츠, 유저 객체, 크리에이트 디티를 가지고 있을 것이다. 얘도 마찬가지로 all, get, set to까지 해주면 엔티티는 완성됐다.
    * 3. 이제 디티오를 만들차례에서 사인업부터 만들자. 사용자한테 직접 ㅈ받을 수있는 거는 아이디 빼고 전부다 받을 수 있다. 그래서 얘내를 dto로 잡는다.
    * 4. 그래서 요청을 해줘야하니 사인업알디큐디티오에 적어준다.그래서 유저네임, 패스워드, 네임 세가지를 받는다. 얘도 all, get, set, to 해준다.
    * 5. 유저로 가보면 로그인 할때 유저네임이랑 해스워드로 로그인 하니까 사인인 리퀘스트디티오에 적어주고 마찬가지로 all등 다 해준다.
    * 6. 투두에서 사용자한테 받을 수 있는건 컨텐츠랑 유저객체를 받을 수 있다. 그러니 투두레지스터리퀘스트이티오에 적어준다.
    * 7. 그다음 메뉴를 구성한다 투두리스트뷰클래스에서 메뉴를 호출하는 메소드를 만든다. 투두리스트뷰에 홈뷰를 만든다. 메뉴를 보여주고 사용자에게서 무슨메뉴를 쓸껀지 입력을 받아야해서 와일문을 써서 메뉴를 계속 보여준다.
    * 8. 투두리스트 생성자가 노아규인데 필드로 스캐너 객체를 가지는 멤머변수를 만들고 6번) , 9번에 주입을 해줘서 홈뷰에서 스캐너를 쓴다고 해서 홈뷰안에 객체를 생성하면 다른 메뉴에서 스캐너 쓸텐데 그럼 계속 뉴 스캐너하게되서 여러개 만들어지는데
    * 9. 여러개 만들바에[ 전에체서 사용할 수 있게 따로 빼서 스캐너를 만들어 준다. 그럼 홈뷰(20)에서 쓸 수있다 그럼 사용자한테 메뉴 입력 받을 수 있다. 입력받고 입력에 따른것들을 실행해주면 되는데 만약 q를 입력했다cmd가
    * 10. 브레이크를 걸어 와일문을 끝낸다.
    * 이제 로그인이 되어있느냐 안되어 있는지의 정보를 알아야 하니 엔티티에 해당 객체가 있는지에 따라 로그인 되어있는지 안되어있는지 안다.  그래서 7번에 유저객체를 멤버면수로 갖는 principal를 만들어 준다.
    * 11. 그럼 로그인 되어있으면 유저의 객체가 프린시펄안에 주입이 되어있을꺼니 19번에 만약에 프린시펄이 객체가 없다는 상태고 22번에 유저 객체가 있다하면 로그아웃을 넣어준다.
    * 12.  그럼 29번 부터도 바꿔줘야 한다. 만약 2번 이면서 니까 엔드엔드 프린시펄이 없다 그러면 회언가이해야하니 else if 하나가 더 들어간다. 널이 아닌경우 로그아웃이 되게 해줘야 한다.
    * 13. 그럼 3번도 && principal이 없는경우 로그인이 떠야한다. 프린시펄이 생겼으니 33번에서 검증을 한번 해준다. 그리고 컨티윤 해준다. 컨티뉴하면 화일의 1버느오가서 메뉴를 다시 띄어준다.
    * 14. 이프에서 안걸리고 ㅈ나가면 투두리스트에 ㅗ간련된 메소드를 호출해주면 된다.
    * 15. 49번에 회원가입을 위한 뷰를 만든다. 입력 받아야 하니까 52번 해준다. 입력 받기전에 출력해준다.
    * 16. 55번에 패스워드입력 받아야 하고 58번도 네임을 입력 받아야 한다. 여기서 유저네임을 입력받을떄 중복확인을 해줘야 한다.얘가 다 만들어지고 사인업리퀘스트디티오를 만들 수있다 여기에 유저네임 패스워드, 네임을 넣어주고
    * 17. 유저 서비스의 회원가입 로직에 사인업리퀘스트 디티오를 전달해준다. 중복확인을 해보자. 5번부터 유저네임 패스워드 네임을 입력받는데 중복확인 로직을하나 추가 한다. 63번 중복확인하고 사인업이퀘스트 디티오를 만들수 있다.
    * 18. 중복확인을 위해 54번에 만든다. 58번 중복이 되지 않았을 때 브레이크해서 나온다. 브레이크가 안되면 61번
    * 19. 유저리스트는 레퍼지토리에 있는 애다. 유저리스트 객체만들어주고 유저 서비스로 간다.
    * 20. 12 번(유저네임에 중복검사하는 메소드를 만든다.) 중복검사를 할 유저네임을 파라미터로 받아온다.
    * 21. 이제 중복검사를 하기위해 유저리스트안에있는걸 검사하는데 유저객체가
    * 유저리스트도 안에 배열로 만들었으니 배열이 존재할려면 유저리스트 생성자안에 유저 객체를 넣어준다.
    * 유저리스트의 객체가 필요해서 6번 멤버변수로 두고
    * 유저 서비스 객체를 만들때 유저 리스트도 만들어져서 유저리슽크가 만들어짐녀 유저 배여리 만들어ㅣㄴ다.
    * 이제 중복검사 하는데 유버리스트에있는 배열을 중복검사 해야하는데 유저리스트안에서 유저스에서 유저네임을 갖고 있느지파인드바이유저네임 메소드를 만들어주는데
    * 12번에 만들어준다. (찾을 유저네임),13번 유저스안에 유저네임있는데 여기서 리턴이 안됐다 하면 리턴null 을 반환 해준다.
    * 13번 파라미터인 유저네임을 전달하고 널이 아니면 을 해주면 중복이 있다 아니다로 판단 가능트루면 중복있음 false면 중복 없음
    *
    *
    *
    * 유저 서비스에 회원가입 하나를 만든다.
    * 19파라미터에 사인업이퀘스트이티오가 들어온다 .
    * 사인업 리퀘스트 디티오를 유저 엔티티화 시켜야 한다. 그다음 유더아이디에 대항 유저아이디를 생성해줘야 하고, 유저배열에 추가해준다.
    * 사인업리퀘디티오로 간다. 여기다가 유저 객체를 반환하는 유저객체를 생성한다. 18번), 리턴뉴 해서 해서 아이디, 유저네임, 패스워드, 네임을 넣어준다.
    * 뉴 유저를 뭘로 변환이 가능할까? 뉴말고 빌더로 가능하다. 그러면 유저로 가서 @빌더를 추가해준다. 그래서 19번 빌더로 만들어 준다.
    * 유저 서비스에 22번 만들어준다.
    * */

